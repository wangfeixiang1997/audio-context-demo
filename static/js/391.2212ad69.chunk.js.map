{"version":3,"file":"static/js/391.2212ad69.chunk.js","mappings":"sMAOA,MAAMA,EAAU,CACZ,CACIC,MAAO,UACPC,MAAO,WAEX,CACID,MAAO,SACPC,MAAO,WAuHf,EAnHmBC,KACf,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,YACtCG,EAAMC,IAAWJ,EAAAA,EAAAA,UAAS,KAC1BK,EAAYC,IAAiBN,EAAAA,EAAAA,UAAS,KAE7CO,EAAAA,EAAAA,YAAU,KACNH,EAAQ,CACJ,CACII,KAAM,YACNZ,MAAO,SAEX,CACIY,KAAM,cACNZ,MAAO,WAEX,CACIY,KAAM,eACNZ,MAAO,YAEX,CACIY,KAAM,YACNZ,MAAO,UAEX,CACIY,KAAM,QACNZ,MAAO,QAEX,CACIY,KAAM,OACNZ,MAAO,WAEb,GAEH,IAMH,OACIa,EAAAA,EAAAA,KAAA,OAAAC,UACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBF,SAAA,EAChCC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBF,SAAA,EAClCD,EAAAA,EAAAA,KAAA,QAAAC,UAAMD,EAAAA,EAAAA,KAACI,EAAAA,EAAgB,OACvBJ,EAAAA,EAAAA,KAAA,QAAAC,SAAM,mBAEVC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBF,SAAA,EACpCD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,uBAAsBF,SAAC,UACtCD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,uBAAsBF,UACjCD,EAAAA,EAAAA,KAACK,EAAAA,GAAAA,MAAW,CACRpB,QAASA,EACTqB,SAhBHC,IACjBd,EAAcc,EAAEC,OAAOrB,MAAM,EAgBTA,MAAOK,EACPiB,WAAW,SACXC,YAAY,YAID,YAAflB,IACIU,EAAAA,EAAAA,MAAA,OAAKC,UAAWd,EAAU,mDAAqD,uBAAuBY,SAAA,EAClGD,EAAAA,EAAAA,KAAA,QAAMG,UAAU,wBAAuBF,SAAC,eACxCD,EAAAA,EAAAA,KAACW,EAAAA,EAAK,CACFC,MAAO,CAAEC,OAAQ,eACjBC,YAAY,QACZC,aAAa,QACbC,UAAU,EACVC,QAASA,KACL3B,GAAW,EAAK,EAEpB4B,OAAQA,KACJ5B,GAAW,EAAM,OAOlB,WAAfE,GACIE,GAAQA,EAAKyB,KAAKC,IAEVlB,EAAAA,EAAAA,MAAA,OACIC,UACIP,IAAewB,EAAKrB,KAChB,mDACA,uBACPE,SAAA,EAEDD,EAAAA,EAAAA,KAAA,QAAMG,UAAU,wBAAuBF,SAAEmB,EAAKrB,QAC9CC,EAAAA,EAAAA,KAACW,EAAAA,EAAK,CACFC,MAAO,CAAEC,OAAQ,eACjBC,YAAaM,EAAKjC,MAClB4B,aAAcK,EAAKjC,MACnB6B,UAAU,EACVC,QAASA,KACLpB,EAAcuB,EAAKrB,KAAK,EAE5BmB,OAAQA,KACJrB,EAAc,GAAG,gBAanD,C","sources":["pages/zone/compressor/index.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport {\n    BranchesOutlined,\n} from '@ant-design/icons';\nimport { Input, Radio } from 'antd';\nimport './index.css';\n\nconst options = [\n    {\n        label: 'Default',\n        value: 'Default'\n    },\n    {\n        label: 'Manual',\n        value: 'Manual'\n    },\n]\n\nconst Compressor = () => {\n    const [isFocus, setIsFocus] = useState(false);\n    const [radioValue, setRadioValue] = useState('Default');\n    const [data, setData] = useState([]);\n    const [focusValue, setFocusValue] = useState('');\n\n    useEffect(() => {\n        setData([\n            {\n                name: 'Threshold',\n                value: '0.0dB',\n            },\n            {\n                name: 'Attack Time',\n                value: '45.0 ms',\n            },\n            {\n                name: 'Release Time',\n                value: '750.0 ms',\n            },\n            {\n                name: 'Hold Time',\n                value: '0.0 ms',\n            },\n            {\n                name: 'Ratio',\n                value: '10.0',\n            },\n            {\n                name: 'Knee',\n                value: '4.0 dB',\n            },\n        ])\n\n    }, [])\n\n    const radioChange = (e) => {\n        setRadioValue(e.target.value)\n    }\n\n    return (\n        <div>\n            <div className='compressor-item-box'>\n                <div className='compressor-item-title'>\n                    <span><BranchesOutlined /></span>\n                    <span>Compressor</span>\n                </div>\n                <div className='compressor-item-content'>\n                    <div className='compressor-item-text'>MODE</div>\n                    <div className='compressor-radio-div'>\n                        <Radio.Group\n                            options={options}\n                            onChange={radioChange}\n                            value={radioValue}\n                            optionType=\"button\"\n                            buttonStyle=\"solid\"\n                        />\n                    </div>\n                    {\n                        radioValue === 'Default' && (\n                            <div className={isFocus ? 'compressor-input-box compressor-input-box-active' : 'compressor-input-box'}>\n                                <span className='compressor-input-text'>Threshold</span>\n                                <Input\n                                    style={{ cursor: 'not-allowed' }}\n                                    placeholder=\"0.0dB\"\n                                    defaultValue=\"0.0dB\"\n                                    bordered={false}\n                                    onFocus={() => {\n                                        setIsFocus(true)\n                                    }}\n                                    onBlur={() => {\n                                        setIsFocus(false)\n                                    }}\n                                />\n                            </div>\n                        )\n                    }\n                    {\n                        radioValue === 'Manual' && (\n                            data && data.map((item) => {\n                                return (\n                                    <div\n                                        className={\n                                            focusValue === item.name ?\n                                                'compressor-input-box compressor-input-box-active' :\n                                                'compressor-input-box'\n                                        }\n                                    >\n                                        <span className='compressor-input-text'>{item.name}</span>\n                                        <Input\n                                            style={{ cursor: 'not-allowed' }}\n                                            placeholder={item.value}\n                                            defaultValue={item.value}\n                                            bordered={false}\n                                            onFocus={() => {\n                                                setFocusValue(item.name)\n                                            }}\n                                            onBlur={() => {\n                                                setFocusValue('')\n                                            }}\n                                        />\n                                    </div>\n                                )\n\n                            })\n\n                        )\n                    }\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Compressor\n"],"names":["options","label","value","Compressor","isFocus","setIsFocus","useState","radioValue","setRadioValue","data","setData","focusValue","setFocusValue","useEffect","name","_jsx","children","_jsxs","className","BranchesOutlined","Radio","onChange","e","target","optionType","buttonStyle","Input","style","cursor","placeholder","defaultValue","bordered","onFocus","onBlur","map","item"],"sourceRoot":""}